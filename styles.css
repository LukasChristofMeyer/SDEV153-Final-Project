* {
   line-height: 1.5; /* Desired by the self-audit, and this is the easiest way. */
   font-size: inherit; /* Basically just a good luck charm. Forgive me; I have history! */
}

html {
   background-color: rgb(90%, 90%, 90%); /* Gray 90 */
}

body {
/* Counter-intuitive to it's px nature to my CSS beginner brain, this scales! 
   All it says here is "Be at least 18px. Otherwise, we don't really care, but do default to 18px." */
   font-size: max(18px, 18px);
}

header {
   display: flex;
   flex-direction: row;
   align-items: baseline;
   background-color: beige;

   border: 0.5vh solid black;
}

/* I apologize for this hacky div! 
   It is how we make sure the logo is always wonderfully a logo in the header's flexbox, until I know a better way */
div.logo-container {
   flex: 0 0 25%
}

header a.logo {
   display: block;
}

img.logo {
   width: 25vw;
}

header nav ul {
   margin-bottom: 0;
   padding-left: 0.25em;
   list-style:none;
}

header nav ul li {
   display:inline-block;
   margin-right: 1em;
   align-items: baseline;
}

header nav ul li {
   margin-top: 1em;
}

header a:hover {color: rgb(0, 0, 119);}

/* Default link colors on chrome. They are declared explicity to ensure accessibility. */
header a:link {color: rgb(0, 0, 238);}
header a:visited{color: rgb(85, 26, 139);}

/* This was defaulted to red, but it wouldn't work against the headers beige, so it had to be darkened */
header a:active{color: rgb(170, 0, 0);}



img.hero-image {
   height: 90vh;
   width: 100%;
}

h1 {
   margin: 0;
   text-align: center;
   border: 1vh outset black;
   background-color: beige;
   font-size: 5em;
}

section {
   margin-top: 5vh;
   background-color: beige;
   display: grid; /* Make the section's divs beneath one another */

   border: 0.25vw solid black;
   border-bottom: 0.125vw solid black;
}

h2 {
   margin: 0;
   text-align: center;
   border: 1vh outset black;
   font-size: 2em;
   text-decoration: underline;
}


div.section-division {
   display: flex;
   flex-direction: row;
   flex-wrap: wrap;

   border-bottom: 0.25vw outset black;
   align-items: flex-start;
}

div.section-division ul {
   display: block;
   padding: 0;
   margin: 0;
   list-style: none;

   max-width: 100%;
   overflow-wrap: break-word;
}

div.section-division ul li {
   max-width: 100%;
   overflow-wrap: break-word;
   word-break: break-word;
}

table, th, td {
   border: 0.1vw groove black;
}

div.section-division table {
   align-self: flex-start;
   overflow: hidden;

   margin: auto;
   max-width: 100%;

   overflow-wrap: break-word;
   word-break: break-word;
}

div.text {
   flex: 1 0 55%; /* Take up 55% of the flex to allow for an adjacent image, but fill it otherwise. */
   align-self: flex-start;
   overflow: hidden;

   display: flex;
   flex-direction: column;
   margin-left: 0.5vw;
   margin-right: 0.5vw;
}

div.text p {
   max-width: 100%;
   flex: 0 0 auto;
}

div.section-division img {
   width: 40%;
   max-height: 80vh;

   border: 1vh groove black;
   margin: auto;
}

section img.full-image {
   height: 90vh; /* We don't want it to be too big */

   flex: 1 1 100%; /* Make it so it does fill our flexbox */
   object-fit: contain; /* But don't stretch the image! */
}

footer {
   margin-top: 5vh;
   background-color: beige;
   text-align: center;

   border: 0.5vh solid black;
}


/*
   Mobile stuff below!
*/


/* If it is more vertical, than it is mobile. 
   At the very least, for all our purposes it is! I mean; this is needed when my laptop is in such a ratio as well! */
@media(max-aspect-ratio: 3/4) {
   body {
      font-size: max(46px, 46px);
   }

   div.text {
      flex: 1 1 100%;
   }

   div.section-division {
      display: grid;
   }

   div.section-division img {
      height: 80%;
      width: 80%;

      display: block;
      border: 1vh groove black;
      margin: auto;

      object-fit: fill;
   }
}